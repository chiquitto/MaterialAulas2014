Referencia: http://www.w3schools.com/css/default.asp

==

Background

background-color
background-image
background-repeat
background-attachment
background-position
background-size
background: color image repeat position attachment;

==

Border: A fronteira esta em torno do preenchimento e conteúdo. A cor da borda é herdado da propriedade color do elemento.

border
border-color
border-style
border-width
border-radius

border-bottom
border-left
border-right
border-top

border-bottom-color
border-bottom-style
border-bottom-width

border-left-color
border-left-style
border-left-width

border-right-color
border-right-style
border-right-width

border-top-color
border-top-style
border-top-width

==

Margin: Limpa uma área ao redor da borda. A margem não tem uma cor de fundo, que é completamente transparente;

margin

margin-top
margin-right
margin-bottom
margin-left

==

Padding: Limpa uma área em torno do conteúdo. O preenchimento é afetado pela fundo da caixa.

padding

padding-left
padding-top
padding-right
padding-bottom

==

CSS Box Model

Todos os elementos do HTML podem ser considerados como caixas.
O CSS Box Model é essencialmente uma caixa ao redor dos elementos HTML, e consiste de: margins, borders, padding e o conteúdo atual.

==

Posicionamento

position: static|fixed|relative|absolute

left
top
right
bottom
z-index

==

position: static

Elementos HTML são position:static por padrão. Um elemento com o posicionamento estático está sempre posicionado de acordo com o fluxo normal de uma página HTML.

Elementos posicionados estaticamento não são afetados pelas propriedades top, bottom, left e right.

==

position: fixed

Um elemento com position:fixed é posicionado relativamente à janela do navegador.
Este tipo de posicionamento não permite a mudança de local do elemento se a janela é rolada. 

Elementos fixados são removidos do fluxo normal. O documento e outros elementos comportam-se como se elemento com position:fixed não existisse. 

Elementos fixados podem se sobrepor a outros elementos.

p {
    position: fixed;
    top: 30px;
    right: 5px;
}

==

position: relative

Um elemento com position:relative está posicionado em relação à sua posição original. 

O conteúdo de elementos posicionados relativamente podem ser movidos e sobrepor outros elementos, mas o espaço reservado para o elemento ainda está preservada no fluxo normal. 

Elementos posicionados relativamente são freqüentemente usados como blocos de contêineres para elementos posicionados absolutamente.

h2 {
    position: relative;
    left: -20px;
}

==

position: absolute

Um elemento de posição absoluta é posicionado em relação ao primeiro elemento pai, que tem uma posição diferente de position:static. Se nenhum elemento for encontrado, o elemento eleito será o <html>. 

Os elementos de posicionamento absoluto são removidas do fluxo normal. O documento e outros elementos se comportam como o elemento posicionado de forma absoluta não existisse. 

Elementos posicionados absolutamente podem se sobrepor a outros elementos.

h2 {
    position: absolute;
    left: 100px;
    top: 150px;
}

==

Propriedade z-index
Elementos Sobrepostos

Quando os elementos são colocados fora do fluxo normal, eles podem sobrepor-se a outros elementos. 

A propriedade z-index especifica a ordem de pilha de um elemento (que elemento deve ser colocado a frente, ou para trás dos outros elementos). 

Um elemento pode ter um z-index positivo ou negativo. 

Um elemento com um maior valor z-index sempre será exibido a frente de outro elemento.

img {
    position: absolute;
    left: 0px;
    top: 0px;
    z-index: -1;
}

==

Propriedade clip

Aplica um clip a um elemento posicionado absolutamente;

img  {
    position: absolute;
    clip: rect(0px,60px,200px,0px);
}

==

Propriedade cursor

Especifica o tipo de cursor que será exibido no elemento

Valores possíveis:
url
auto
crosshair
default
pointer
move
e-resize
ne-resize
nw-resize
n-resize
se-resize
sw-resize
s-resize
w-resize
text
wait
help

==

Propriedade overflow

Especifica o que acontece se o conteúdo "transbordar"

Valores possíveis:
auto
hidden
scroll
visible
inherit

==

Display

A propriedade display especifica se/como um elemento é exibido.

display:block
Um elemento de bloco é um elemento que ocupa toda a largura disponível, e tem uma quebra de linha antes e depois dele.

display:inline
Um elemento inline ocupa apenas o máximo de largura, se necessário, e não força as quebras de linha.

display:none
Remove o elemento do HTML.

==

Visibility

A propriedade visibility especifica se um elemento deve ser visivel/escondido

visibility:visible|hidden;

